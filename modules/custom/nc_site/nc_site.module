<?php

use Drupal\Core\Database\Database;


function nc_site_preprocess_node( &$variables ) {
	if ( isset( $variables['node'] ) ) {
		$node = \Drupal::routeMatch()->getParameter('node');
		if ($node) {
			// You can get nid and anything else you need from the node object.
			if ( $node == "secured" ||  $node->id()  == 120) {
				$user = \Drupal::currentUser();
				if  ($user->getRoles()[0] == 'anonymous'){
					global $base_url;
					$response = new Symfony\Component\HttpFoundation\RedirectResponse($base_url."/node/2");
					$response->send(); // don't send the response yourself inside controller and form.
					return;
				}
			}
		}

	}
}

/**
 * Implements hook_entity_presave().
 */
function nc_site_entity_presave( Drupal\Core\Entity\EntityInterface $entity ) {
	switch ( $entity->bundle() ) {
		case 'consultation':
			$connection = Database::getConnection();

			$query  = $connection->select( 'nc_villes', 'v' )
			                     ->fields( 'v', array( 'id', 'ville', 'cp' ) )
			                     ->condition( 'id', $entity->get( 'field_ville' )->value )
			                     ->orderBy( 'ville', 'ASC' );
			$result = $query->execute();
			$nville = $cp = "";
			foreach ( $result as $ville ) {
				$hasZero = "";
				if ( strlen( $ville->cp ) == 4 ) {
					$hasZero = 0;
				}
				$nville = $ville->ville;
				$cp     = $hasZero . $ville->cp;
			}
			$node_address = $entity->get( "field_adresse" )->getValue()[0]["value"];
			$address      = urlencode( $node_address . ", " . $cp . " " . $nville . ", france" );
			$url          = "https://maps.google.com/maps/api/geocode/json?sensor=false&address=" . $address;
			$response     = file_get_contents( $url );
			$json         = json_decode( $response, true );

			$lat = $json['results'][0]['geometry']['location']['lat'];
			$lng = $json['results'][0]['geometry']['location']['lng'];

			$entity->set( "field_gps_latitude", $lat );
			$entity->set( "field_gps_longitude", $lng );

			break;
	}
}

/**
 * Implements hook_theme().
 */
function nc_site_theme( $existing, $type, $theme, $path ) {
	return [
		'consultationsform' => [
			'template'  => 'consultationsform',
			'variables' => [
				'data' => null,
			],
		],
		'multisites'        => [
			'template'  => 'multisites',
			'variables' => [
				'data' => null,
			],
		],
		'livret'            => [
			'template'  => 'livret',
			'variables' => [
				'data' => null,
			],
		],
		'rejoindre'         => [
			'template'  => 'rejoindre',
			'variables' => [
				'data' => null,
			],
		],
	];
}